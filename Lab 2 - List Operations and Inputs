{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "19e5db66",
   "metadata": {},
   "source": [
    "### In Class Lab 2\n",
    "\n",
    "In this lab we will practice manipulating lists. Also, practicing everything that we have learned up to this point. These are written in minomal detail to assure that you first understand the issue and systematically approach it. \n",
    "\n",
    "\n",
    "\n",
    "**Problem 1:** Create the following list that contains the following: \n",
    "apple\n",
    "banana\n",
    "orange\n",
    "grape \n",
    "kiwi\n",
    "mango\n",
    "pineapple\n",
    "strawberry\n",
    "blueberry\n",
    "watermelon\n",
    "\n",
    "However, to do this begin with defining an empty list named fruits. Then, using the append function add each element to the list. print the list. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c498b29f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Apple, Banana, Orange, Grape, Kiwi, Mango, Pineapple, Strawberry, Blueberry, Watermelon\n"
     ]
    }
   ],
   "source": [
    "fruits = []\n",
    "\n",
    "fruits.append(\"Apple\")\n",
    "fruits.append(\"Banana\")\n",
    "fruits.append(\"Orange\")\n",
    "fruits.append(\"Grape\")\n",
    "fruits.append(\"Kiwi\")\n",
    "fruits.append(\"Mango\")\n",
    "fruits.append(\"Pineapple\")\n",
    "fruits.append(\"Strawberry\")\n",
    "fruits.append(\"Blueberry\")\n",
    "fruits.append(\"Watermelon\")\n",
    "\n",
    "print(\", \".join(fruits))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3276f3f6",
   "metadata": {},
   "source": [
    "**Problem 2** Create the list containing the following set of numbers 1,2,3,4,5,6,7,8,9,10. Create a prompt that gathers input from the user. Specifically, the prompt should ask the user for an index \"Enter an index to remove\"  the user should enter a number. If anything else but a number is entered the user should be prompted with an error message: ERROR: Please enter a valid number and try again. Example, if the user enters a letter like \"h\" than this should automatically result in the ERROR statement shown above. Next, assure that the number entered is valid, for example if a user enters the number 14, the list does not contain a 14th element and therefore this will result in the specified error message as well. However, if the number provided is within the list then use the `del` function to remove the specified element from the list. Print the updated list to the console. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "48c8e31d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please enter an index to remove:  12\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR: Please enter a valid number and try again.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please enter an index to remove:  l\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR: Please enter a valid number and try again.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please enter an index to remove:  5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Updated Index List: [1, 2, 3, 4, 5, 7, 8, 9, 10]\n"
     ]
    }
   ],
   "source": [
    "numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
    "\n",
    "while True:\n",
    "    user_ipt = input(\"Please enter an index to remove: \")\n",
    "    \n",
    "    if user_ipt.isdigit() and (0 <= (index := int(user_ipt)) < len(numbers)):\n",
    "        del numbers[index]\n",
    "        print(\"Updated Index List:\", numbers)\n",
    "        break\n",
    "\n",
    "    print(\"ERROR: Please enter a valid number and try again.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6db8a9af",
   "metadata": {},
   "source": [
    "**Problem 3** Create a list of characters from the alphabet containing a through f call this list characters. Next, ask the user to provide a character to insert, call this input \"char.\" Next, obtain another input from the user which is to provide an index to insert. Using the insert function insert the new char at the specified index provided by the user. \n",
    "print \"Updated List:\" and the new list. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "da85a6f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please enter a letter to insert:  k\n",
      "Please provide the index (0-6) to insert the character:  k\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR: Please enter a valid integer for the index.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please provide the index (0-6) to insert the character:  9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR: The index must be between 0 and 6.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please provide the index (0-6) to insert the character:  -5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR: The index must be between 0 and 6.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please provide the index (0-6) to insert the character:  5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Updated List: ['a', 'b', 'c', 'd', 'e', 'k', 'f']\n"
     ]
    }
   ],
   "source": [
    "characters = ['a', 'b', 'c', 'd', 'e', 'f']\n",
    "\n",
    "while True:\n",
    "    char = input(\"Please enter a letter to insert: \")\n",
    "    if len(char) == 1 and ('a' <= char <= 'z' or 'A' <= char <= 'Z'):\n",
    "        break\n",
    "    else:\n",
    "        print(\"ERROR: Please enter a valid single letter.\")\n",
    "\n",
    "while True:\n",
    "    try:\n",
    "        index = int(input(\"Please provide the index (0-6) to insert the character: \"))\n",
    "        if 0 <= index <= 6:\n",
    "            break\n",
    "        else:\n",
    "            print(\"ERROR: The index must be between 0 and 6.\")\n",
    "    except ValueError:\n",
    "        print(\"ERROR: Please enter a valid integer for the index.\")\n",
    "\n",
    "characters.insert(index, char)\n",
    "\n",
    "print(\"Updated List:\", characters)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb018123",
   "metadata": {},
   "source": [
    "**Problem 4** Work flow is a major part of programming. In this problem you will create a small list. This list can contain the following to start bmw audi toyota subaru. Now print the following menu to the user: \n",
    "\n",
    "Menu Options: \n",
    "1. Add an item to the list\n",
    "2. Remove an item from the list\n",
    "3. View an item to the list\n",
    "\n",
    "Then prompt the user to enter a choice. The choice should be given as a numerical input. \n",
    "If the user enters 1 then this will take the user to a set of choices, prompt the user to collect what they would like to add to the list and in what index, if the index is left empty it should be appended to the end of the list. Otherwise if an index location is given then insert the item at the specified location and print the updated list. Print the sorted list. \n",
    "\n",
    "If the user enters a 2 then the user will be asked to provide an index location of the item they want to be removed. Using the pop method then remove the item at the index location. For example, say they enter 2 then the third item is removed. The output should print the following: \"Removed: toyota\" from the list. Finally, print the list. \n",
    "\n",
    "If the user enters 3. Then prompt the user to enter an index. \"Please enter the idex of the item you wish to view:\" if the user enters an index then you should simpl print out the item, for example, \"The item you requested is bmw\"\n",
    "\n",
    "If user enters anything else but 1, 2, 3 thei will result in an error statement:\"Invalid choice. Please try again.\"\n",
    "\n",
    "This should be a one way trip. Do not attempt to create a loop of any kind. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "28d5a480",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Start Menu:\n",
      "1. Add An Item\n",
      "2. Remove An Item\n",
      "3. View An Item\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please make a selection (1, 2, or 3):  5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Not a valid choice. Please try again.\n",
      "\n",
      "Start Menu:\n",
      "1. Add An Item\n",
      "2. Remove An Item\n",
      "3. View An Item\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please make a selection (1, 2, or 3):  3\n",
      "Index to view:  2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Item: Toyota\n"
     ]
    }
   ],
   "source": [
    "car_list = [\"BMW\", \"Audi\", \"Toyota\", \"Subaru\"]\n",
    "\n",
    "def get_valid_index(message):\n",
    "    while True:\n",
    "        index = input(message)\n",
    "        if index.isdigit() and 0 <= int(index) < len(car_list):\n",
    "            return int(index)\n",
    "        else:\n",
    "            print(\"Please enter a valid index.\\n\")\n",
    "\n",
    "while True:\n",
    "    print(\"Start Menu:\\n1. Add An Item\\n2. Remove An Item\\n3. View An Item\")\n",
    "    choice = input(\"Please make a selection (1, 2, or 3): \")\n",
    "\n",
    "    if choice == '1':\n",
    "        item = input(\"Item to add: \")\n",
    "        index = input(\"Please enter an index (leave empty to add to the end of the list): \")\n",
    "        \n",
    "        if index:\n",
    "            car_list.insert(int(index), item)\n",
    "        else:\n",
    "            car_list.append(item)\n",
    "        \n",
    "        print(f\"Updated: {car_list}\\nSorted: {sorted(car_list)}\")\n",
    "        break\n",
    "\n",
    "    elif choice == '2':\n",
    "        index = get_valid_index(\"Please select an index to remove: \")\n",
    "        removed_item = car_list.pop(index)\n",
    "        print(f\"Removed: {removed_item}\\nUpdated: {car_list}\")\n",
    "        break\n",
    "\n",
    "    elif choice == '3':\n",
    "        index = get_valid_index(\"Index to view: \")\n",
    "        print(f\"Item: {car_list[index]}\")\n",
    "        break\n",
    "\n",
    "    else:\n",
    "        print(\"Not a valid choice. Please try again.\\n\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-ai-2024.04-py310",
   "language": "python",
   "name": "conda-env-anaconda-ai-2024.04-py310-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
